
DECLARE @ClientName	nvarchar(200)
DECLARE @DBname		nvarchar(200)
DECLARE @DBstate	int
DECLARE @SQL		nvarchar(max)

DECLARE @TmpTable Table
(
	Client_NAME nvarchar(500),
	DB_IDENTIFIER nvarchar(500),
	A_Program  nvarchar(500), 
	PROGRAM_ID nvarchar(500),
	INITIATIVE_ID nvarchar(500),
	IS_FINANCIAL_INITIATIVE nvarchar(500),
	INITIATIVE_HAS_PRIMARY_IMPACT_INFLUENCE nvarchar(500),
	NUMBER_ENABLED_IMPACTS nvarchar(500),
	NUMBER_USED_IMPACTS nvarchar(500),
	NUMBER_OF_OTHER_INITIATIVES_IO_OWNS nvarchar(500),
	NUMBER_MILESTONES nvarchar(500),
	NUMBER_NON_IMPACT_BEARING_MILESTONES nvarchar(500),
	NUMBER_IMPACT_BEARING_MILESTONES nvarchar(500),
	NUMBER_COMPLETED_MILESTONES nvarchar(500),
	NUMBER_ATTRIBUTES_PER_INITIATIVE nvarchar(500),
	NUMBER_FILLED_OUT_ATTRIBUTES_PER_INITIATIVE nvarchar(500),
	INITIATIVE_LAST_IMPACT_BEARING_MILESTONE nvarchar(500),
	INITIATIVE_FIRST_MS_DATE nvarchar(500),
	INITIATIVE_LAST_MS_DATE nvarchar(500),
	INITIATIVE_MS_DURATION nvarchar(500),
	INITIATIVE_DURATION nvarchar(500),
	A_LAST_MODIFIED nvarchar(500),
	A_MILESTONE_LAST_MODIFIED nvarchar(500),
	INITIATIVE_CREATION_DATE nvarchar(500),
	DELTA_DATES_INITIAITVE_CREATION_PROGRAM_START nvarchar(500),
	NUMBER_MS_WITH_TL_CHANGE_OVERTIME nvarchar(500),
	NUMBER_INITIATIVE_WITH_TL_CHANGE_OVERTIME nvarchar(500),
	NUMBER_INITIATIVE_OWNER_CHANGE nvarchar(500),
	NUMBER_INITIATIVE_UPDATES_PER_MONTH nvarchar(500),
	NUMBER_MS_PLAN_CHANGE nvarchar(500),
	NUMBER_MS_PLAN_CHANGE_IN_GATE_AFTER_DATE nvarchar(500),
	NUMBER_MS_FORECAST_CHANGE nvarchar(500),
	NUMBER_MS_FORECAST_CHANGE_IN_GATE_AFTER_DATE nvarchar(500),
	MS_MIN_GAP_PLAN nvarchar(500),
	MS_MAX_GAP_PLAN nvarchar(500),
	MS_MIN_GAP_FORECAST nvarchar(500),
	MS_MAX_GAP_FORECAST nvarchar(500),
	MS_AVG_GAP_PLAN nvarchar(500),
	MS_AVG_GAP_FORECAST nvarchar(500),
	MS_DISPERSION nvarchar(500),
	NUMBER_MS_WITHOUT_PLAN nvarchar(500),
	NUMBER_IM_WITHOUT_PLAN nvarchar(500),
	MS_AVG_NAME_LENGTH nvarchar(500),
	NUMBER_MS_WITHOUT_NAME nvarchar(500),
	INITIATIVE_CURRENT_STAGE nvarchar(500),
	INITIATIVE_IN_STAGE_PHASE_ONE_IN_DAYS nvarchar(500),
	INITIATIVE_IN_STAGE_PHASE_TWO_IN_DAYS nvarchar(500),
	INITIATIVE_IN_STAGE_PHASE_THREE_IN_DAYS nvarchar(500),
	INITIATIVE_IN_STAGE_PHASE_FOUR_IN_DAYS nvarchar(500),
	PIMPACT_CLASSIFICATION nvarchar(500)


)


DECLARE DBCursor CURSOR SCROLL FOR
	SELECT Name, State FROM master.sys.databases 
--	WHERE (name like 'RM_E%' or name like 'RM_A%' or name like 'EUR%' or name like 'AMR%') and state !=6		
	WHERE name NOT IN ('master', 'tempdb', 'model', 'msdb', 'DBMaint', 'Ntirety', 'RM_Scorecard', 'RM_Lite', 'DevOpsDB', 'LiteSpeedLocal') and name not like 'Reports%' and state not in (4,6)

OPEN DBCursor

FETCH DBCursor INTO @DBname, @DBstate

WHILE @@Fetch_Status = 0
BEGIN

If @DBstate !=6
Begin 

	print @SQL
	INSERT INTO @TmpTable 
	  EXEC(
	  	'
USE '+@DBname+'
;WITH CTE1 (A_ID, INITIATIVE_FIRST_MS_DATE, INITIATIVE_LAST_MS_DATE) AS (SELECT
										RM.A_ID,
										(SELECT CAST(MIN(A_PLAN) AS DATE) FROM dbo.TBL_MILESTONE M1 WHERE M1.A_FK_ROADMAP = RM.A_ID and A_IS_DISAGGREGATED_IMPACTS = 0 AND A_FK_MILESTONE_TYPE = 1 AND YEAR(A_PLAN) <> ''1900'') AS INITIATIVE_FIRST_MS_DATE,
										(SELECT CAST(MAX(A_PLAN) AS DATE) FROM dbo.TBL_MILESTONE M1 WHERE M1.A_FK_ROADMAP = RM.A_ID and A_IS_DISAGGREGATED_IMPACTS = 0 AND A_FK_MILESTONE_TYPE = 1 AND YEAR(A_PLAN) <> ''1900'') AS INITIATIVE_LAST_MS_DATE
										FROM dbo.TBL_ROADMAP RM 
										),
	  CTE2 (A_ID, INITIATIVE_MS_DURATION) AS (SELECT 
										CTE1.A_ID,
										DATEDIFF (DAY, CTE1.INITIATIVE_FIRST_MS_DATE, CTE1.INITIATIVE_LAST_MS_DATE) AS INITIATIVE_MS_DURATION
										FROM CTE1
										),
	  CTE3 (A_FK_ROADMAP, A_PLAN, A_FORECAST, A_ACTUAL) AS (SELECT im.A_FK_ROADMAP, im.A_PLAN, im.A_FORECAST, im.A_ACTUAL 
														FROM reporting.VIEW_ALL_IMPACT im CROSS JOIN TBL_BASE_IMPACT bim 
														WHERE bim.A_ID = im.A_FK_BASE_IMPACT AND A_CLASSIFICATION = 1 
														)
SELECT 
	db_name() as DB_IDENTIFIER,
	(SELECT A_CLIENT_NAME FROM  dbo.TBL_CLIENTS M1 WHERE M1.A_ID = P.A_FK_CLIENT_ID GROUP BY A_CLIENT_NAME) as Client_NAME,
	A_Program Program, 
	P.A_ID AS PROGRAM_ID,
	RM.A_ID AS INITIATIVE_ID,
	(SELECT CASE WHEN RM.A_ID IN (SELECT A_FK_ROADMAP FROM TBL_IMPACT IM JOIN TBL_BASE_IMPACT BIM ON IM.A_FK_BASE_IMPACT = BIM.A_ID AND A_FINANCIAL = 1) THEN 1 ELSE 0 END) AS IS_FINANCIAL_INITIATIVE,
	(SELECT CASE WHEN RM.A_ID IN (SELECT A_FK_ROADMAP FROM TBL_IMPACT IM JOIN TBL_BASE_IMPACT BIM ON IM.A_FK_BASE_IMPACT = BIM.A_ID AND A_CLASSIFICATION = 1) THEN 1 ELSE 0 END) AS INITIATIVE_HAS_PRIMARY_IMPACT_INFLUENCE,
	(SELECT COUNT(*) FROM dbo.TBL_ROADMAP_BASE_IMPACT RBI WHERE RBI.A_FK_ROADMAP = RM.A_ID GROUP BY RBI.A_FK_ROADMAP) AS NUMBER_ENABLED_IMPACTS,
	(SELECT COUNT(*) FROM dbo.TBL_ROADMAP_BASE_IMPACT RBI JOIN TBL_IMPACT IM1 ON RM.A_ID = IM1.A_FK_ROADMAP AND RM.A_ID = RBI.A_FK_ROADMAP AND RBI.A_FK_BASE_IMPACT = IM1.A_FK_BASE_IMPACT) AS NUMBER_USED_IMPACTS,
	(SELECT COUNT(*) FROM dbo.TBL_USER_ROLE UR1 WHERE UR1.A_FK_USER = (SELECT A_FK_USER FROM dbo.TBL_USER_ROLE UR WHERE UR.A_FK_ROADMAP = RM.A_ID AND UR.A_FK_ROLE = 5) AND UR1.A_FK_ROLE = 5) AS NUMBER_OF_OTHER_INITIATIVES_IO_OWNS,
	(SELECT COUNT(*) FROM dbo.TBL_MILESTONE M1 WHERE M1.A_FK_ROADMAP = RM.A_ID AND A_IS_DISAGGREGATED_IMPACTS = 0 AND A_FK_MILESTONE_TYPE = 1) AS NUMBER_MILESTONES,
	(SELECT COUNT(*) FROM dbo.TBL_MILESTONE M1 WHERE M1.A_FK_ROADMAP = RM.A_ID AND A_IS_DISAGGREGATED_IMPACTS = 0 AND A_FK_MILESTONE_TYPE = 1 AND A_ID NOT IN (SELECT A_FK_MILESTONE FROM TBL_IMPACT )) AS NUMBER_NON_IMPACT_BEARING_MILESTONES,
	(SELECT COUNT(*) FROM dbo.TBL_MILESTONE M1 WHERE M1.A_FK_ROADMAP = RM.A_ID AND A_IS_DISAGGREGATED_IMPACTS = 0 AND A_FK_MILESTONE_TYPE = 1 AND A_ID IN (SELECT A_FK_MILESTONE FROM TBL_IMPACT )) AS NUMBER_IMPACT_BEARING_MILESTONES,
	(SELECT COUNT(*) FROM dbo.TBL_MILESTONE M1 WHERE M1.A_FK_ROADMAP = RM.A_ID AND A_IS_DISAGGREGATED_IMPACTS = 0 AND A_FK_MILESTONE_TYPE = 1 AND A_COMPLETION_DATE_UTC is not NULL) AS NUMBER_COMPLETED_MILESTONES,
	(SELECT COUNT(*) FROM dbo.TBL_ROADMAP_UDF M4 WHERE M4.A_FK_ROADMAP = RM.A_ID GROUP BY M4.A_FK_ROADMAP) AS NUMBER_ATTRIBUTES_PER_INITIATIVE,
	(SELECT COUNT(*) FROM dbo.TBL_ROADMAP_UDF M4 WHERE M4.A_FK_ROADMAP = RM.A_ID and (M4.A_TEXTBOX_VALUE is not NULL or M4.A_FK_UDF_VALUE is not NULL)  GROUP BY M4.A_FK_ROADMAP) AS NUMBER_FILLED_OUT_ATTRIBUTES_PER_INITIATIVE,
	(SELECT MAX(ML1.A_PLAN) FROM TBL_MILESTONE ML1 JOIN TBL_IMPACT IM1 ON RM.A_ID = IM1.A_FK_ROADMAP AND IM1.A_FK_MILESTONE = ML1.A_ID) AS INITIATIVE_LAST_IMPACT_BEARING_MILESTONE,
	(SELECT INITIATIVE_FIRST_MS_DATE FROM CTE1 WHERE CTE1.A_ID = RM.A_ID) AS INITIATIVE_FIRST_MS_DATE,
	(SELECT INITIATIVE_LAST_MS_DATE FROM CTE1 WHERE CTE1.A_ID = RM.A_ID) AS INITIATIVE_LAST_MS_DATE,
	(SELECT INITIATIVE_MS_DURATION FROM CTE2 WHERE CTE2.A_ID = RM.A_ID) AS INITIATIVE_MS_DURATION,
	(SELECT DATEDIFF(DAY, RM.A_END_DATE, RM.A_START_DATE)) AS INITIATIVE_DURATION,
	A_LAST_MODIFIED,
	A_MILESTONE_LAST_MODIFIED,
	(SELECT CAST (MIN(A_AUDIT_TIME) AS DATE) FROM dbo.AUDIT_TBL_ROADMAP M1 WHERE M1.A_ID = RM.A_ID AND A_AUDIT_OPERATION = ''I'' GROUP BY M1.A_ID) AS INITIATIVE_CREATION_DATE,
	DATEDIFF (DAY, P.A_START_DATE, (SELECT CAST (MIN(A_AUDIT_TIME) AS DATE) FROM dbo.AUDIT_TBL_ROADMAP M1 WHERE M1.A_ID = RM.A_ID AND A_AUDIT_OPERATION = ''I'' GROUP BY M1.A_ID)) AS DELTA_DATES_INITIAITVE_CREATION_PROGRAM_START,
	(SELECT COUNT(*) FROM dbo.AUDIT_TBL_MILESTONE AT1 WHERE AT1.A_FK_ROADMAP = RM.A_ID AND AT1.A_FK_TRAFFIC_LIGHT_ACTUAL != AT1.A_FK_TRAFFIC_LIGHT_UPDATE GROUP BY AT1.A_FK_ROADMAP) AS NUMBER_MS_WITH_TL_CHANGE_OVERTIME,
	(SELECT COUNT(DISTINCT A_FK_TRAFFIC_LIGHT_OVERALL) FROM dbo.AUDIT_TBL_ROADMAP ATR WHERE ATR.A_ID = RM.A_ID GROUP BY A_ID) AS NUMBER_INITIATIVE_WITH_TL_CHANGE_OVERTIME,
	(SELECT COUNT(*) FROM AUDIT_TBL_USER_ROLE UR1 WHERE RM.A_ID = UR1.A_FK_ROADMAP AND UR1.A_AUDIT_OPERATION = ''U'' AND UR1.A_FK_ROLE = 5) AS NUMBER_INITIATIVE_OWNER_CHANGE,
	(SELECT (COUNT(*)/(SELECT IIF(INITIATIVE_MS_DURATION = 0, 1, INITIATIVE_MS_DURATION) FROM CTE2 WHERE CTE2.A_ID = RM.A_ID)) AS INITIATIVE_MS_DURATION FROM dbo.AUDIT_TBL_ROADMAP M1 WHERE M1.A_ID = RM.A_ID AND A_AUDIT_OPERATION = ''U'' GROUP BY M1.A_ID) AS NUMBER_INITIATIVE_UPDATES_PER_MONTH,
	(SELECT COUNT(DISTINCT AT1.A_PLAN) FROM dbo.AUDIT_TBL_MILESTONE AT1 WHERE AT1.A_FK_ROADMAP = RM.A_ID AND AT1.A_AUDIT_OPERATION = ''U'') AS  NUMBER_MS_PLAN_CHANGE,
	(SELECT COUNT(DISTINCT AT1.A_PLAN) FROM dbo.AUDIT_TBL_MILESTONE AT1 WHERE AT1.A_FK_ROADMAP = RM.A_ID AND AT1.A_AUDIT_OPERATION = ''U'' AND AT1.A_AUDIT_TIME > ''2018-10-09'') AS  NUMBER_MS_PLAN_CHANGE_IN_GATE_AFTER_DATE,
	(SELECT COUNT(DISTINCT AT1.A_UPDATE) FROM dbo.AUDIT_TBL_MILESTONE AT1 WHERE AT1.A_FK_ROADMAP = RM.A_ID AND AT1.A_AUDIT_OPERATION = ''U'') AS  NUMBER_MS_FORECAST_CHANGE,
	(SELECT COUNT(DISTINCT AT1.A_UPDATE) FROM dbo.AUDIT_TBL_MILESTONE AT1 WHERE AT1.A_FK_ROADMAP = RM.A_ID AND AT1.A_AUDIT_OPERATION = ''U''  AND AT1.A_AUDIT_TIME > ''2018-10-09'') AS  NUMBER_MS_FORECAST_CHANGE_IN_GATE_AFTER_DATE,
	(SELECT DATEDIFF(DAY, MIN(T1.A_PLAN), MAX(T1.A_PLAN)) FROM (SELECT TOP 2 * FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND YEAR(M1.A_PLAN) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID ORDER BY M1.A_PLAN ASC) AS T1) AS MS_MIN_GAP_PLAN,
	(SELECT DATEDIFF(DAY, MIN(M1.A_PLAN), MAX(M1.A_PLAN)) FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND YEAR(M1.A_PLAN) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID) AS MS_MAX_GAP_PLAN,
	(SELECT DATEDIFF(DAY, MIN(T1.A_UPDATE), MAX(T1.A_UPDATE)) FROM (SELECT TOP 2 * FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND YEAR(M1.A_UPDATE) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID ORDER BY M1.A_UPDATE ASC) AS T1) AS MS_MIN_GAP_FORECAST,
	(SELECT DATEDIFF(DAY, MIN(M1.A_UPDATE), MAX(M1.A_UPDATE)) FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND YEAR(M1.A_UPDATE) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID) AS MS_MAX_GAP_FORECAST,
	(SELECT DATEDIFF(DAY, MIN(M1.A_PLAN), MAX(M1.A_PLAN))/(SELECT COUNT(M2.A_ID) FROM TBL_MILESTONE M2 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND M2.A_FK_ROADMAP = RM.A_ID) FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND YEAR(M1.A_PLAN) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID) AS MS_AVG_GAP_PLAN,
	(SELECT DATEDIFF(DAY, MIN(M1.A_UPDATE), MAX(M1.A_UPDATE))/(SELECT COUNT(M2.A_ID) FROM TBL_MILESTONE M2 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND M2.A_FK_ROADMAP = RM.A_ID) FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND YEAR(M1.A_UPDATE) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID) AS MS_AVG_GAP_FORECAST,
	(SELECT IIF((SELECT DATEDIFF(DAY, MIN(T1.A_PLAN), MAX(T1.A_PLAN)) FROM (SELECT TOP 2 * FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND YEAR(M1.A_PLAN) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID ORDER BY M1.A_PLAN ASC) AS T1) <= (0.8*(SELECT DATEDIFF(DAY, MIN(M1.A_PLAN), MAX(M1.A_PLAN))/(SELECT COUNT(M2.A_ID) FROM TBL_MILESTONE M2 WHERE M2.A_FK_ROADMAP = RM.A_ID) FROM TBL_MILESTONE M1 WHERE YEAR(M1.A_PLAN) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID)) OR (SELECT DATEDIFF(DAY, MIN(M1.A_PLAN), MAX(M1.A_PLAN)) FROM TBL_MILESTONE M1 WHERE YEAR(M1.A_PLAN) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID) >= (1.2*(SELECT DATEDIFF(DAY, MIN(M1.A_PLAN), MAX(M1.A_PLAN))/(SELECT COUNT(M2.A_ID) FROM TBL_MILESTONE M2 WHERE M2.A_FK_ROADMAP = RM.A_ID) FROM TBL_MILESTONE M1 WHERE YEAR(M1.A_PLAN) <> ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID)), 0, 1)) AS MS_DISPERSION,
	(SELECT COUNT(*) FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND YEAR(M1.A_PLAN) = ''1900'' AND M1.A_FK_ROADMAP = RM.A_ID) AS NUMBER_MS_WITHOUT_PLAN,
	(SELECT COUNT(*) FROM TBL_IMPACT IM1 WHERE (IM1.A_PLAN_INTERCEPT IS NULL) AND (IM1.A_PLAN_SLOPE IS NULL) AND IM1.A_FK_ROADMAP = RM.A_ID) AS NUMBER_IM_WITHOUT_PLAN,
	(SELECT AVG(LEN(M1.A_MILESTONE)) FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND M1.A_FK_ROADMAP = RM.A_ID) AS  MS_AVG_NAME_LENGTH,
	(SELECT COUNT(*) FROM TBL_MILESTONE M1 WHERE A_IS_DISAGGREGATED_IMPACTS = 0 AND M1.A_FK_ROADMAP = RM.A_ID AND M1.A_MILESTONE = '''') AS NUMBER_MS_WITHOUT_NAME,
	(SELECT SP1.A_STAGE_PHASE FROM TBL_STAGE S1 JOIN TBL_STAGE_PHASE SP1 ON RM.A_FK_STAGE = S1.A_ID AND S1.A_FK_STAGE_PHASE = SP1.A_ID) AS INITIATIVE_CURRENT_STAGE,
	(SELECT DATEDIFF(DAY, MIN(RS1.A_UPDATE), MAX(RS1.A_ACTUAL)) FROM TBL_ROADMAP_STAGE RS1 JOIN TBL_STAGE S1 ON RS1.A_FK_ROADMAP = RM.A_ID AND RS1.A_FK_STAGE = S1.A_ID  AND S1.A_FK_STAGE_PHASE = 1 AND YEAR(RS1.A_ACTUAL) <> ''1900'' AND YEAR(RS1.A_UPDATE) <> ''1900'' GROUP BY S1.A_FK_STAGE_PHASE) AS INITIATIVE_IN_STAGE_PHASE_ONE_IN_DAYS,
	(SELECT DATEDIFF(DAY, MIN(RS1.A_UPDATE), MAX(RS1.A_ACTUAL)) FROM TBL_ROADMAP_STAGE RS1 JOIN TBL_STAGE S1 ON RS1.A_FK_ROADMAP = RM.A_ID AND RS1.A_FK_STAGE = S1.A_ID  AND S1.A_FK_STAGE_PHASE = 2 AND YEAR(RS1.A_ACTUAL) <> ''1900'' AND YEAR(RS1.A_UPDATE) <> ''1900'' GROUP BY S1.A_FK_STAGE_PHASE) AS INITIATIVE_IN_STAGE_PHASE_TWO_IN_DAYS,
	(SELECT DATEDIFF(DAY, MIN(RS1.A_UPDATE), MAX(RS1.A_ACTUAL)) FROM TBL_ROADMAP_STAGE RS1 JOIN TBL_STAGE S1 ON RS1.A_FK_ROADMAP = RM.A_ID AND RS1.A_FK_STAGE = S1.A_ID  AND S1.A_FK_STAGE_PHASE = 3 AND YEAR(RS1.A_ACTUAL) <> ''1900'' AND YEAR(RS1.A_UPDATE) <> ''1900'' GROUP BY S1.A_FK_STAGE_PHASE) AS INITIATIVE_IN_STAGE_PHASE_THREE_IN_DAYS,
	(SELECT DATEDIFF(DAY, MIN(RS1.A_UPDATE), MAX(RS1.A_ACTUAL)) FROM TBL_ROADMAP_STAGE RS1 JOIN TBL_STAGE S1 ON RS1.A_FK_ROADMAP = RM.A_ID AND RS1.A_FK_STAGE = S1.A_ID  AND S1.A_FK_STAGE_PHASE = 4 AND YEAR(RS1.A_ACTUAL) <> ''1900'' AND YEAR(RS1.A_UPDATE) <> ''1900'' GROUP BY S1.A_FK_STAGE_PHASE) AS INITIATIVE_IN_STAGE_PHASE_FOUR_IN_DAYS,
	(SELECT BIT1.A_DESCRIPTION FROM TBL_BASE_IMPACT BI1 JOIN TBL_ROADMAP_BASE_IMPACT RBI1 ON RBI1.A_FK_BASE_IMPACT = BI1.A_ID AND RBI1.A_FK_ROADMAP = RM.A_ID AND A_CLASSIFICATION = 1 JOIN TBL_BASE_IMPACT_TYPE BIT1 ON  BI1.A_FK_BASE_IMPACT_TYPE = BIT1.A_ID ) AS PIMPACT_CLASSIFICATION
FROM dbo.TBL_ROADMAP RM
JOIN TBL_PROGRAM P on P.A_ID = RM.A_FK_PROGRAM
WHERE 
						p.A_FK_CLIENT_ID <> ''E488855D-9B7F-4047-AA69-1707D283448D'' 
					AND  p.A_PROGRAM not like ''%DEMO%'' and  p.A_PROGRAM  not like''%copy%'' and p.A_PROGRAM  not like ''z_%'' and p.A_PROGRAM  not like ''%Sandbox%''
					and p.A_ENABLED = 1

	--		UNION ALL 

		'
	  )
--and A_FK_Client_ID !=''E488855D-9B7F-4047-AA69-1707D283448D''
		if @@TRANCOUNT >0 Commit tran
end
Else
INSERT INTO @TmpTable
  EXEC('
		SELECT ''' + @DBname + ''', ''Offline'', ''Offline'', ''Offline'', ''Offline'', ''Offline'', ''Offline'', ''Offline''
      ')

  FETCH DBCursor INTO @DBname, @DBstate
END

CLOSE DBCursor
DEALLOCATE DBCursor

SELECT * FROM @TmpTable order by DB_IDENTIFIER

--Select top 1 A_FK_USER, (A_TIME) from AUDIT_SESSION_LOG group by A_FK_USER order by A_FK_USER, A_TIME desc

--SELECT * from (select ROW_NUMBER() OVER(PARTITION BY A_FK_USer ORDER BY A_Time desc) AS Row#, A_FK_User, A_TIME FROM AUDIT_SESSION_LOG ) a WHERE Row# =1